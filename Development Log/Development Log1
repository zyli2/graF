# Development Log (Date: 10/31/22 -- 11/04/22)
 
## Weekly Goals
Complete the first part of the Final Project:
   Team Contract - Complete
   Project Proposal - Complete
   Github Link - Complete
   First Development Log - Complete
 
## Specific Tasks Completed (and by who)
   Find and clean up the dataset - James & Tim 
   Developed leading questions - James
   Provided a specific description of how we’re going to answer our leading questions given our chosen dataset with an algorithm - James
   Wrote parts of data acquisition and algorithm sections - Diego
   Investigated which algorithm to use - Diego
   
   Investigated betweenness centrality, and graph visualization - James  
   Rough project timeline - Bryant 
   Completion of the first development log - Group effort 
   Four group meetings (including one with the mentor).
 
## Problems Encountered
   We were stuck on selecting our dataset and our leading question. There was an overwhelming number of datasets to look at. We decided to look at a social network dataset - with subreddits - because analyzing these datasets can tell us things we otherwise cannot find online. We were unsure about the feasibility of our proposal. First, we wanted to use open flights and COVID infection rate data to measure covid infection risk for flying from one U.S city to another. Our mentor warned us that the nature of our data wouldn’t work with Dijkstra, so we changed.	
 
## Plans for next week
- We are now working on dividing the project into different stages: we will first start preparing and working with our dataset.
- We will all make sure we understand our algorithms and do the necessary research to implement them. 
 
## Optional: Questions for mentor  
- What are some good resources to look at for computing graph visuals?
- Could we still calculate betweenness centrality if our graph results in separate connected components instead of one?
- We have two choices for the data structure we are going to use to store our data–node with adjacency list or a matrix. The node is more friendly in terms of storage efficiency whereas the matrix has better performance in algorithms.
